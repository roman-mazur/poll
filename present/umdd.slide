# How much resources I need?..
Usage model driven development

Tags: architecture, usage model
Summary: We'll review the idea of defining the system usage model in code using the CUE language and see how it can be used to derive the Terraform configuration.

Roman Mazur
Project lead, Ubisoft

roman@rmazur.io

X: @roman_mazur

## Introduction

.image https://detector.media/doc/images/news/archive/2016/165616/i75_ArticleImage_165616.jpg

.caption poll: Introduction

## The device

.image umdd/zoom-on-poll.png 500 _

## Be my guest

.image poll/qr.png 400 _

## Let's show some engagement!

//.iframe http://localhost:17000/chart.html 600 1000
.iframe https://poll.rmazur.io/chart.html 600 1000

## What's happening

.image umdd/case-vote.png 600 _

.caption poll: Use cases

## Presenter adds context
.image umdd/case-annotate.png 600 _

## Presenter visualizes
.image umdd/case-fetch.png 600 _

## Use cases summary

- Type of interaction: request/response.
- 3 types of requests: vote, annotate (add labels), fetch (get aggregated data)

## Putting it into the code

.caption poll: Start coding

Voting can be done as a REST API call from a web app.

Let's imagine how this call will be used... and declare it in JSON.

.code umdd/use-case-examples.cue /vote-use-case-json/,/vote-use-case-json-end/

## Introducing new language: CUE

Now dropping some quotes and commas...

.code umdd/use-case-examples.cue /vote-use-case-cue/,/vote-use-case-cue-end/

## CUE constraints

 ...help to validate the data we write

.code umdd/use-case-examples.cue /constraints-1/,/constraints-1-end/

If we set concurentUsers: **2_000_000** 
and run **cue vet**, we get

```
useCase.vote.concurentUsers: invalid value 2000000 (out of bound <=1000000):
    ./usage.cue:14:23
    ./usage.cue:9:18
```

## Adding more constraints

To validate the period value.

.code umdd/use-case-examples.cue /constraints-2/,/constraints-2-end/

## And even more

To limit the fields.

.code umdd/use-case-examples.cue /constraints-3/,/constraints-3-end/

## Back to our use cases

.caption poll: Use cases in code

.code umdd/use-case-examples.cue /all-use-cases/,/all-use-cases-end/

## Derive call per second rate

.code umdd/use-case-examples.cue /call-rate/,/call-rate-end/

Checking...
```
$ cue eval -e useCase

vote: CPS:     2.0e+2
annotate: CPS: 0.08333333333333333333333333333333333
fetch: CPS:    2.0
```

*output modified for brevity

## Can we assess the storage?

## Data: votes

.code ../votes/structure/data.go /present: vote/,/present: vote-end/

.caption poll: Data structures

## Data: labels

.code ../votes/structure/data.go /present: label/,/present: label-end/

Importing from Go to CUE:
```
$ cue get go rmazur.io/poll/votes/structure

 #Label: {
	talk_name: string    
	name:      string    
	timestamp: time.Time 
 }
```

## Adding record samples

.code umdd/use-case-examples.cue /label-sample/,/label-sample-end/

## Memory requirement

.code umdd/use-case-examples.cue /memory-requirement/,/memory-requirement-end/

## Let's summarize

.code umdd/use-case-examples.cue /summary/,/summary-end/

**VoilÃ !**

```
$ cue eval -e summary

CPS:    202

memory: 901
```

I could keep everything in RAM...

## Roman...

.background umdd/classics.jpg

.html umdd/envelope.html

: We put back-of-envelope calculations in code... But why?
: I sincerely believe that it can be explained only by showing more code.

## K8s Deployment

.caption poll: Plugging the model

We can take the model data into our Kubernetes manifests.

.code umdd/deploy-examples.cue /k8s-deployment/,/k8s-deployment-end/

Then `cue export` and pass to `kubectl apply`.

## Terraform
 ...or set a constraint on the AWS WAF rate limit rule.

.code umdd/deploy-examples.cue /terraform-waf/,/terraform-waf-end/

.caption poll: EC2 Deployment

## How is the service you use today deployed?

## AWS instance types info
Import AWS EC2 instance types info into CUE.

.code umdd/aws-instances-import.txt

 *examples of such import are also collected in [github.com/roman-mazur/cuetf](https://github.com/roman-mazur/cuetf)

## Selecting a suitable type

.code umdd/deploy-examples.cue /instance-filter/,/instance-filter-end/

Which gives us
```
[
  "t4g.nano", "t2.micro", "t3.micro", "t3.nano", 
  "t4g.micro", "t3a.nano", "t2.nano", "t3a.micro"
]
```

## Confirming the free tier

.code umdd/deploy-examples.cue /free-tier/,/free-tier/

Which gives us `t3.micro`

## Final deployment

.code umdd/deploy-examples.cue /final/,/final-end/

## Adjusting the vote use case

Original CPS: 202. 

But we worry about our t3.micro instance...

.code umdd/use-case-examples.cue /summary-limited-cps/,/summary-limited-cps-end/

```
summary.CPS: invalid value 202 (out of bound <=60):
    ./usage.cue:63:12
    ./usage.cue:64:7
```

## Adjusted vote use case

Changing the vote frequency allowed to the audience:

.code umdd/use-case-examples.cue /vote-use-case-modified/,/vote-use-case-modified-end/

## Don't forget to vote

.image umdd/voter-ui.jpg 550 _

## Why to code the model?

Reason 1: it may help us to **maintain/validate the deployment code.**

.image umdd/umdd-diagram-intro.png 600 _

## Usage model driven development
.caption poll: UMDD concept

.image umdd/umdd-diagram.png 550 _

## Refinement: memory usage confirmation
.caption poll: Refinement

.code umdd/deploy-examples.cue /memory-stats/,/memory-stats-end/
.code umdd/deploy-examples.cue /memory-output/,/memory-output-end/

## Refinement: constraints on the memory stats

 ... help us understand if the real system behaviour still matches our model 

.code umdd/deploy-examples.cue /memory-check/,/memory-check-end/

## Why to code the model?

Reason 1: it may help us to maintain/validate the deployment code.

Reason 2: it gives us a formal way **to confirm if the design matches the real world.**

## What was the talk about?
.caption poll: Conclusions

- Usage model driven development
- CUE may help, but it's not the only way
- Should be perfect for CDKs
- Code on GitHub: [github.com/roman-mazur/poll](github.com/roman-mazur/poll)

.image umdd/umdd-diagram.png 350 _
